<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rnb.newbase.security.persistent.mapper.SystemRoleMapper">

    <sql id="conditionColumn">
        <if test="null!=id">
            and `id` = #{id}
        </if>
        <if test="null!=name">
            and `name` = #{name}
        </if>
    </sql>

    <sql id="setColumn">
        <if test="null!=name">
            `name` = #{name},
        </if>
        <if test="null!=description">
            `description` = #{description},
        </if>
    </sql>

    <sql id="baseColumn">
        `id`,`name`,`description`,`create_time`,`modify_time`
    </sql>

    <sql id="tableName">`system_role`</sql>

    <resultMap id="resultMap"  type="com.rnb.newbase.security.persistent.entity.SystemRole">
        <id column="id" property="id" />
        <result column="name" property="name"/>
        <result column="description" property="description" />
        <result column="create_time" property="createTime" />
        <result column="modify_time" property="modifyTime" />
    </resultMap>

    <insert id="insert" parameterType="com.rnb.newbase.security.persistent.entity.SystemRole" useGeneratedKeys="true" keyProperty="id">
        insert into <include refid="tableName"/> (
        `name`
        ,`description`
        ,`create_time`
        ) values (
        #{name}
        ,#{description}
        ,now()
        )
    </insert>

    <update id="update">
        update
            <include refid="tableName"/>
        <set>
            <include refid="setColumn"/>
        </set>
        where
        `id` = #{id}
    </update>

    <select id="queryById" resultMap="resultMap">
        select
            <include refid="baseColumn" />
        from
            <include refid="tableName"/>
        where
        `id` = #{id}
    </select>

    <select id="queryListByCondition" resultMap="resultMap">
        select
            <include refid="baseColumn" />
        from
            <include refid="tableName"/>
        <where>
            <include refid="conditionColumn"/>
        </where>
        order by
        `id`
    </select>

    <select id="findUserRoles" resultMap="resultMap">
        SELECT
            <include refid="baseColumn" />
        FROM
            <include refid="tableName"/> AS r
        WHERE
        r.`id` in (
            SELECT
                   ur.`role_id`
            FROM
                 `system_user_role` AS ur
            WHERE
                ur.`user_id` = #{userId}
        )
    </select>

    <insert id="insertRoleResource">
        INSERT INTO `system_role_resource` (
            `role_id`
            ,`resource_id`
            ,`create_time`
        ) VALUES (
            #{roleId}
            ,#{resourceId}
            ,now()
        )
    </insert>

    <delete id="deleteRoleResource">
        DELETE FROM `system_role_resource`
        WHERE `role_id` = #{roleId}
    </delete>

    <delete id="deleteUserRole">
        DELETE FROM `system_user_role`
        WHERE `role_id` = #{roleId}
    </delete>

    <delete id="delete">
        DELETE FROM `system_role`
        WHERE `id` = #{id}
    </delete>
</mapper>