<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rnb.newbase.security.persistent.mapper.SystemUserWeixinMapper">

    <sql id="conditionColumn">
        <if test="null!=id">
            AND `id` = #{id}
        </if>
        <if test="null!=userId">
            AND `user_id` = #{userId}
        </if>
        <if test="null!=openId">
            AND `open_id` = #{openId}
        </if>
    </sql>

    <sql id="setColumn">
        <if test="null!=accessToken">
            `access_token` = #{accessToken},
        </if>
        <if test="null!=refreshToken">
            `refresh_token` = #{refreshToken},
        </if>
    </sql>

    <sql id="baseColumn">
        `id`,`user_id`,`open_id`,`access_toekn`,`refresh_token`,`create_time`,`modify_time`
    </sql>

    <sql id="tableName">`system_user_weixin`</sql>

    <resultMap id="resultMap"  type="com.rnb.newbase.security.persistent.entity.SystemUserWeixin">
        <id column="id" property="id" />
        <result column="user_id" property="userId"/>
        <result column="open_id" property="openId" />
        <result column="access_token" property="accessToken" />
        <result column="refresh_token" property="refreshToken" />
        <result column="create_time" property="createTime" />
        <result column="modify_time" property="modifyTime" />
    </resultMap>

    <insert id="insert" parameterType="com.rnb.newbase.security.persistent.entity.SystemUserWeixin" useGeneratedKeys="true" keyProperty="id">
        insert into <include refid="tableName"/> (
        `user_id`
        ,`open_id`
        ,`access_token`
        ,`refresh_token`
        ,`create_time`
        ) values (
        #{userId}
        ,#{openId}
        ,#{accessToken}
        ,#{refreshToken}
        ,now()
        )
    </insert>

    <update id="update">
        update
        <include refid="tableName"/>
        <set>
            <include refid="setColumn"/>
        </set>
        where
        `id` = #{id}
    </update>

    <select id="queryById" resultMap="resultMap">
        select
        <include refid="baseColumn" />
        from
        <include refid="tableName"/>
        where
        `id` = #{id}
    </select>

    <select id="queryListByCondition" resultMap="resultMap">
        SELECT <include refid="baseColumn" />
        FROM <include refid="tableName"/>
        <where>
            <include refid="conditionColumn"/>
        </where>
        order by
        `id`
    </select>

</mapper>